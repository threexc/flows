#!/bin/bash -ex

# clone repos and setup
git clone https://git.yoctoproject.org/poky
git clone https://git.yoctoproject.org/meta-patchtest
git clone https://git.openembedded.org/meta-openembedded

# export this directory for later use
PATCHTESTROOT=$(pwd)
PATCHTEST_SHARE="patchtest_share"
CACHEDIR="/workspace/laminar/yoctocache"

# set the path so the patchtest script is found
export PATH=/workspace/laminar/.local/bin:$PATH

# initialize the test environment and add the relevant layers
cd poky
source oe-init-build-env
bitbake-layers add-layer $PATCHTESTROOT/meta-patchtest
bitbake-layers add-layer $PATCHTESTROOT/poky/meta-selftest
bitbake-layers add-layer $PATCHTESTROOT/meta-openembedded/meta-oe
bitbake-layers add-layer $PATCHTESTROOT/meta-openembedded/meta-python

echo "PREFERRED_VERSION_python3-pylint = \"2.17.4\"" >> conf/local.conf

# link the backed-up downloads and sstate-cache dirs for faster builds
ln -s $CACHEDIR/downloads
ln -s $CACHEDIR/sstate-cache

# setup the sharedir
patchtest-setup-sharedir --directory $PATCHTEST_SHARE

# copy the series test log from the cache so that we don't repeat the tests
cp $CACHEDIR/patchtest-series-test.log $PATCHTEST_SHARE/mboxes/.series_test.log

# get the latest patches. The interval is double the time between runs (60m) in case a run is missed/fails for any reason
LATEST=$(patchtest-get-series --limit 100 --interval 120 --directory $PATCHTEST_SHARE/mboxes --tested-series $PATCHTEST_SHARE/mboxes/.series_test.log)

if [[ ! $LATEST =~ "Downloading" ]]; then
    echo "No new patches to test. Stopping pipeline..."
    exit 0
fi

# run the image. As a security failsafe, timeout after 60 minutes if it hasn't finished
timeout 60m qemu-system-x86_64 \
-drive file=$CACHEDIR/core-image-patchtest-qemux86-64.rootfs.ext4,if=virtio,format=raw \
-enable-kvm \
-m 2048 \
-snapshot \
-fsdev local,id=test_mount,path=$PATCHTEST_SHARE,security_model=mapped \
-device virtio-9p-pci,fsdev=test_mount,mount_tag=test_mount \
-serial mon:stdio \
-serial null \
-nographic \
-kernel $CACHEDIR/bzImage \
-append 'root=/dev/vda rw console=ttyS0 console=ttyS1 oprofile.timer=1 tsc=reliable no_timer_check rcupdate.rcu_expedited=1 swiotlb=0'

# copy the series test log back to cache with the updated info
cp $PATCHTEST_SHARE/mboxes/.series_test.log $CACHEDIR/patchtest-series-test.log 
cp $PATCHTEST_SHARE/mboxes/* $ARCHIVE

PATCHES=$(ls $PATCHTEST_SHARE/mboxes/*.patch)

if [ -n "$PATCHES" ]; then
    for PATCH in $PATCHES; do
        patchtest-send-results --patch "$PATCH"
    done
fi
